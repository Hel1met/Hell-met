{"ast":null,"code":"var _jsxFileName = \"/Users/soone/Desktop/Hell-met/front-end/src/components/stopwatch/StopWatch.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from 'react-router-dom';\nimport './StopWatch.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StopWatch = () => {\n  _s();\n\n  const [time, setTime] = React.useState(0);\n  const [timerOn, setTimerOn] = React.useState(false);\n  React.useEffect(() => {\n    let interval = null;\n\n    if (timerOn) {\n      interval = setInterval(() => {\n        setTime(prevTime => prevTime + 10);\n      }, 10);\n    } else if (!timerOn) {\n      clearInterval(interval);\n    }\n\n    if (!timerOn && time === 0) {\n      setTimerOn(true);\n    }\n\n    return () => clearInterval(interval);\n  }, [time, timerOn]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Timers\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC774\\uC6A9\\uC2DC\\uAC04\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"display\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [(\"0\" + Math.floor(time / 60000 % 60)).slice(-2), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: (\"0\" + Math.floor(time / 1000 % 60)).slice(-2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"buttons\",\n      children: timerOn && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"./\",\n        className: \"button1\",\n        children: \"\\uC774\\uC6A9\\uC885\\uB8CC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StopWatch, \"snp1kxavGO7tjRfbaxEOQxv4YU8=\");\n\n_c = StopWatch;\nexport default StopWatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"StopWatch\");","map":{"version":3,"sources":["/Users/soone/Desktop/Hell-met/front-end/src/components/stopwatch/StopWatch.jsx"],"names":["React","Link","StopWatch","time","setTime","useState","timerOn","setTimerOn","useEffect","interval","setInterval","prevTime","clearInterval","Math","floor","slice"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,iBAAP;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,KAAK,CAACK,QAAN,CAAe,CAAf,CAAxB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,KAAK,CAACK,QAAN,CAAe,KAAf,CAA9B;AAEAL,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AACpB,QAAIC,QAAQ,GAAG,IAAf;;AAEA,QAAIH,OAAJ,EAAa;AACXG,MAAAA,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC3BN,QAAAA,OAAO,CAAEO,QAAD,IAAcA,QAAQ,GAAG,EAA1B,CAAP;AACD,OAFqB,EAEnB,EAFmB,CAAtB;AAGD,KAJD,MAIO,IAAI,CAACL,OAAL,EAAc;AACnBM,MAAAA,aAAa,CAACH,QAAD,CAAb;AACD;;AAED,QAAI,CAACH,OAAD,IAAYH,IAAI,KAAK,CAAzB,EAA4B;AACxBI,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AAED,WAAO,MAAMK,aAAa,CAACH,QAAD,CAA1B;AACD,GAhBD,EAgBG,CAACN,IAAD,EAAOG,OAAP,CAhBH;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA,8BACE;AAAA,mBAAO,CAAC,MAAMO,IAAI,CAACC,KAAL,CAAYX,IAAI,GAAG,KAAR,GAAiB,EAA5B,CAAP,EAAwCY,KAAxC,CAA8C,CAAC,CAA/C,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAO,CAAC,MAAMF,IAAI,CAACC,KAAL,CAAYX,IAAI,GAAG,IAAR,GAAgB,EAA3B,CAAP,EAAuCY,KAAvC,CAA6C,CAAC,CAA9C;AAAP;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA,gBACGT,OAAO,iBAAI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,IAAT;AAAc,QAAA,SAAS,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADd;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAnCD;;GAAMJ,S;;KAAAA,S;AAqCN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport './StopWatch.css';\n\nconst StopWatch = () => {\n  const [time, setTime] = React.useState(0);\n  const [timerOn, setTimerOn] = React.useState(false);\n\n  React.useEffect(() => {\n    let interval = null;\n\n    if (timerOn) {\n      interval = setInterval(() => {\n        setTime((prevTime) => prevTime + 10);\n      }, 10);\n    } else if (!timerOn) {\n      clearInterval(interval);\n    }\n\n    if (!timerOn && time === 0) {\n        setTimerOn(true);\n    }\n\n    return () => clearInterval(interval);\n  }, [time, timerOn]);\n\n  return (\n    <div className=\"Timers\">\n      <h2>이용시간</h2>\n      <div id=\"display\">\n        <span>{(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}:</span>\n        <span>{(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}</span>\n      </div>\n\n      <div id=\"buttons\">\n        {timerOn && <Link to=\"./\" className=\"button1\">이용종료</Link>}\n      </div>\n    </div>\n  );\n};\n\nexport default StopWatch;"]},"metadata":{},"sourceType":"module"}